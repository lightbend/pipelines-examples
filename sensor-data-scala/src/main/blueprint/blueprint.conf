blueprint {
  streamlets {
    sensor-data = pipelines.examples.sensordata.SensorDataIngress
    metrics = pipelines.examples.sensordata.SensorDataToMetrics
    validation = pipelines.examples.sensordata.MetricsValidation
    valid-logger = pipelines.examples.sensordata.ValidMetricLogger
    invalid-logger = pipelines.examples.sensordata.InvalidMetricLogger
    rotorizer = pipelines.examples.sensordata.RotorSpeedFilter
    rotor-avg-logger = pipelines.examples.sensordata.RotorspeedWindowLogger
  }

  connections {
    sensor-data.out = [metrics.in]
    metrics.out = [validation.in]
    validation.out-0 = [invalid-logger.in]
    validation.out-1 = [
      valid-logger.in,
      rotorizer.in
    ]
    rotorizer.out = [rotor-avg-logger.in]
  }
}
